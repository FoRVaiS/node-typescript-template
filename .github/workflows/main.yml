on:
  pull_request:
    branches:
      - main

jobs:
  code-quality:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        job: [lint, test]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Cache node modules
        uses: actions/cache@v3
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-modules-${{ hashFiles('**/package-lock.json') }}

      - name: Install dependencies
        run: npm ci

      - name: Run ${{ matrix.job }} tasks
        run: npm run ${{ matrix.job }}

  health-check:
    needs: code-quality
    runs-on: ubuntu-latest
    strategy:
      matrix:
        environment: [prod, dev]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Build image
        run: docker build -t node-typescript-template --target ${{ matrix.environment }} .

      - name: Import node_modules from image
        uses: ./.github/actions/import-from-container
        if: matrix.environment == 'dev'
        with:
          image: node-typescript-template:${{ matrix.environment }}
          src: /app/node_modules
          dest: ./node_modules

      - name: Start container with binded workspace
        if: matrix.environment == 'dev'
        run: docker run -d -v $PWD:/app -p 8080:8080 --name api node-typescript-template

      - name: Start container
        if: matrix.environment != 'dev'
        run: docker run -d -p 8080:8080 --name api node-typescript-template

      - name: Run health-check
        run: docker exec api node scripts/health-check.js http://0.0.0.0:8080/healthz 10 5
